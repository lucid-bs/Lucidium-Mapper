[gd_resource type="ShaderMaterial" load_steps=5 format=3 uid="uid://bpnac6d7buech"]

[sub_resource type="Shader" id="Shader_p2e3u"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.beta2's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx, depth_prepass_alpha;
uniform vec4 albedo : source_color;
uniform float color_multiplier : hint_range(0, 8) = 1;
uniform float white_blend : hint_range(0, 1) = 1;

uniform sampler2D noise_texture;
uniform float noise_interpolate : hint_range(0, 1.0) = 1;

float random (vec2 uv) {
    return fract(sin(dot(uv.xy,
        vec2(12.9898,78.233))) * 43758.5453123);
}


void fragment() {
	vec2 base_uv = UV;
	vec4 noise = texture(noise_texture, UV);
	ALBEDO = mix(albedo.rgb * color_multiplier, vec3(1, 1, 1) * clamp(color_multiplier, 1, 3), white_blend);
	EMISSION = mix(albedo.rgb * color_multiplier, vec3(1, 1, 1) * clamp(color_multiplier, 1, 3), white_blend);

	// This does some weird stuff on the arrow mesh as the UVs are utterly nonextant
	// Thanks Unidot Importer
	ALPHA = float(clamp(noise.r + mix(-1, 1, mix(0.5, 1, noise_interpolate)), 0, 1) == 1.0);
	//ALPHA = noise.r;
}
"

[sub_resource type="Gradient" id="Gradient_4hp6b"]
interpolation_mode = 2

[sub_resource type="FastNoiseLite" id="FastNoiseLite_j37dc"]
frequency = 0.02
fractal_type = 0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_he622"]
seamless = true
color_ramp = SubResource("Gradient_4hp6b")
noise = SubResource("FastNoiseLite_j37dc")

[resource]
render_priority = 0
shader = SubResource("Shader_p2e3u")
shader_parameter/albedo = Color(0.898039, 0.0313726, 0.0627451, 1)
shader_parameter/color_multiplier = 1.0
shader_parameter/white_blend = 0.0
shader_parameter/noise_texture = SubResource("NoiseTexture2D_he622")
shader_parameter/noise_interpolate = 1.0
